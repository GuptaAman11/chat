{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nexport function useConnectionHook() {\n  _s();\n  const [connections, setConnections] = useState([]);\n  const getConnections = async () => {\n    try {\n      const auth = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8000/api/v1/connect/abc', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${auth}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      setConnections(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return {\n    connections,\n    getConnections\n  };\n}\n_s(useConnectionHook, \"JCu20Mk8PQg85Y+LndNQN78VKzU=\");\nexport function useNotificationHook() {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const getNotifications = async () => {\n    try {\n      const auth = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8000/api/v1/connect/req', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${auth}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      setNotifications(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return {\n    notifications,\n    getNotifications\n  };\n}\n_s2(useNotificationHook, \"/HH3zTd3BUNOgnlhD79kguSWbWM=\");\nfunction useSendConncetionRequest() {\n  const sendConnectionRequest = async () => {\n    try {\n      const auth = localStorage.getItem('token');\n      const response = await fetch('http://localhost:8000/api/v1/connect/connect', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${auth}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          targetId: id\n        })\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return {\n    notifications,\n    getNotifications\n  };\n}","map":{"version":3,"names":["useState","useConnectionHook","_s","connections","setConnections","getConnections","auth","localStorage","getItem","response","fetch","method","headers","data","json","error","console","useNotificationHook","_s2","notifications","setNotifications","getNotifications","useSendConncetionRequest","sendConnectionRequest","body","JSON","stringify","targetId","id"],"sources":["/Users/shubham/chat/frontend/src/component/Hooks/connectionHook.js"],"sourcesContent":["import { useState } from 'react';\nexport function useConnectionHook() {\n    const [connections, setConnections] = useState([]);\n    const getConnections = async () => {\n        try{\n            const auth = localStorage.getItem('token');\n            const response = await fetch('http://localhost:8000/api/v1/connect/abc', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${auth}`,\n                    'Content-Type': 'application/json',\n        }\n            });\n            const data = await response.json();\n            setConnections(data);\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    return { connections, getConnections };\n}\n\nexport function useNotificationHook() {\n    const [notifications, setNotifications] = useState([]);\n    const getNotifications = async () => {\n        try{\n            const auth = localStorage.getItem('token');\n            const response = await fetch('http://localhost:8000/api/v1/connect/req', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${auth}`,\n                    'Content-Type': 'application/json',\n        }\n            });\n            const data = await response.json();\n            setNotifications(data);\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    return { notifications, getNotifications };\n}\n\n function useSendConncetionRequest() {\n    const sendConnectionRequest = async () => {\n        try{\n            const auth = localStorage.getItem('token');\n            const response = await fetch('http://localhost:8000/api/v1/connect/connect', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${auth}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({targetId: id})\n            });        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    return { notifications, getNotifications };\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAG;MACC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACrEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAe,EAAG,UAASN,IAAK,EAAC;UACjC,cAAc,EAAE;QAC5B;MACI,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCV,cAAc,CAACS,IAAI,CAAC;IACxB,CAAC,CACD,OAAOE,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EACD,OAAO;IAAEZ,WAAW;IAAEE;EAAe,CAAC;AAC1C;AAACH,EAAA,CApBeD,iBAAiB;AAsBjC,OAAO,SAASgB,mBAAmBA,CAAA,EAAG;EAAAC,GAAA;EAClC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMqB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAG;MACC,MAAMf,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACrEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAe,EAAG,UAASN,IAAK,EAAC;UACjC,cAAc,EAAE;QAC5B;MACI,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCM,gBAAgB,CAACP,IAAI,CAAC;IAC1B,CAAC,CACD,OAAOE,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EACD,OAAO;IAAEI,aAAa;IAAEE;EAAiB,CAAC;AAC9C;AAACH,GAAA,CApBeD,mBAAmB;AAsBlC,SAASK,wBAAwBA,CAAA,EAAG;EACjC,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAG;MACC,MAAMjB,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,eAAe,EAAG,UAASN,IAAK,EAAC;UACjC,cAAc,EAAE;QACpB,CAAC;QACDkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,QAAQ,EAAEC;QAAE,CAAC;MACvC,CAAC,CAAC;IAAS,CAAC,CAChB,OAAOb,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EACD,OAAO;IAAEI,aAAa;IAAEE;EAAiB,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}