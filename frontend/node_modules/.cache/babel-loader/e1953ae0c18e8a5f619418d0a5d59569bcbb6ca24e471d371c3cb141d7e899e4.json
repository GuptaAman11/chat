{"ast":null,"code":"var _jsxFileName = \"/Users/shubham/chat/frontend/src/component/ChatPage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ChatPage.css';\nimport Header2 from '../Header/Header2';\nimport { useAddMessage, useFetchMsg } from '../Hooks/messageHooks';\nimport io from 'socket.io-client';\nimport { useGetLoggedInUser } from '../Hooks/chatHooks';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const {\n    user\n  } = useGetLoggedInUser();\n  const {\n    allMsg,\n    setAllMsg\n  } = useFetchMsg();\n  const {\n    addMessage\n  } = useAddMessage();\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [message, setMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = io('http://localhost:8000');\n    setSocket(newSocket);\n    if (user) {\n      newSocket.emit('self-room', user);\n      newSocket.on('connection', () => {\n        setSocketConnected(true);\n        console.log('Socket connected');\n      });\n    }\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [user]);\n  useEffect(() => {\n    if (socket && chatId) {\n      socket.emit('join-room', chatId);\n    }\n  }, [socket, chatId]);\n  useEffect(() => {\n    if (socket) {\n      socket.on('message-received', newMessageReceived => {\n        if (chatId !== newMessageReceived.chat._id) {\n          // give notification\n        } else {\n          setAllMsg(prevAllMsg => [...prevAllMsg, newMessageReceived]);\n        }\n      });\n    }\n    return () => {\n      if (socket) {\n        socket.off('message received');\n      }\n    };\n  }, [socket, chatId, setAllMsg]);\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    if (user) {\n      const newMessage = await addMessage(message);\n      socket.emit('new-message', newMessage);\n      setAllMsg(prevAllMsg => [...prevAllMsg, {\n        content: message,\n        user: user._id\n      }]);\n      setMessage('');\n    } else {\n      console.log('User not logged in');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [allMsg && allMsg.length > 0 ? allMsg.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No messages available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"VfDnM5qushcxHteShYoQqyWfxPQ=\", false, function () {\n  return [useParams, useGetLoggedInUser, useFetchMsg, useAddMessage];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","Header2","useAddMessage","useFetchMsg","io","useGetLoggedInUser","useParams","jsxDEV","_jsxDEV","ChatPage","_s","chatId","user","allMsg","setAllMsg","addMessage","socketConnected","setSocketConnected","message","setMessage","socket","setSocket","newSocket","emit","on","console","log","disconnect","newMessageReceived","chat","_id","prevAllMsg","off","handleOnSubmit","event","preventDefault","newMessage","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/shubham/chat/frontend/src/component/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './ChatPage.css';\nimport Header2 from '../Header/Header2';\nimport { useAddMessage, useFetchMsg } from '../Hooks/messageHooks';\nimport io from 'socket.io-client';\nimport { useGetLoggedInUser } from '../Hooks/chatHooks';\nimport { useParams } from 'react-router-dom';\n\nconst ChatPage = () => {\n  const { chatId } = useParams();\n  const { user } = useGetLoggedInUser();\n  const { allMsg, setAllMsg } = useFetchMsg();\n  const { addMessage } = useAddMessage();\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [message, setMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    const newSocket = io('http://localhost:8000');\n    setSocket(newSocket);\n\n    if (user) {\n      newSocket.emit('self-room', user);\n      newSocket.on('connection', () => {\n        setSocketConnected(true);\n        console.log('Socket connected');\n      });\n    }\n\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [user]);\n\n  useEffect(() => {\n    if (socket && chatId) {\n      socket.emit('join-room', chatId);\n    }\n  }, [socket, chatId]);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on('message-received', (newMessageReceived) => {\n        if (chatId !== newMessageReceived.chat._id) {\n          // give notification\n        } else {\n          setAllMsg((prevAllMsg) => [...prevAllMsg, newMessageReceived]);\n        }\n      });\n    }\n\n    return () => {\n      if (socket) {\n        socket.off('message received');\n      }\n    };\n  }, [socket, chatId, setAllMsg]);\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    if (user) {\n      const newMessage = await addMessage(message);\n      socket.emit('new-message', newMessage);\n      setAllMsg((prevAllMsg) => [...prevAllMsg, { content: message, user: user._id }]);\n      setMessage('');\n    } else {\n      console.log('User not logged in');\n    }\n  };\n\n  return (\n    <div className=\"chat-page\">\n      <Header2 />\n      <div className=\"chat\">\n        {allMsg && allMsg.length > 0 ? (\n          allMsg.map((msg, index) => (\n            <div key={index} className=\"chat-messages\">\n              <div className=\"message\">{msg.content}</div>\n            </div>\n          ))\n        ) : (\n          <h1>No messages available</h1>\n        )}\n        <form onSubmit={handleOnSubmit}>\n          <input \n            type=\"text\" \n            placeholder=\"Type a message...\" \n            value={message} \n            onChange={(e) => setMessage(e.target.value)} \n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}