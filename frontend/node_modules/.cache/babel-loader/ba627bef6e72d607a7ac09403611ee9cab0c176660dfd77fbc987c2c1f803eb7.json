{"ast":null,"code":"var _jsxFileName = \"/Users/shubham/chat/frontend/src/component/ChatPage/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ChatPage.css';\nimport Header2 from '../Header/Header2';\nimport { useAddMessage, useFetchMsg } from '../Hooks/messageHooks';\nimport { useGetLoggedInUser } from '../Hooks/chatHooks';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const {\n    user\n  } = useGetLoggedInUser();\n  const {\n    allMsg,\n    setAllMsg\n  } = useFetchMsg();\n  const {\n    addMessage\n  } = useAddMessage();\n  const [message, setMessage] = useState('');\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    if (user) {\n      await addMessage(message);\n      co;\n      setAllMsg(prevAllMsg => [...prevAllMsg, {\n        content: message,\n        user: user._id\n      }]);\n      setMessage('');\n    } else {\n      console.log('User not logged in');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [allMsg && allMsg.length > 0 ? allMsg.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No messages available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"ygtAjw5vIzaAVTBbOo2XZNgKSrs=\", false, function () {\n  return [useParams, useGetLoggedInUser, useFetchMsg, useAddMessage];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","Header2","useAddMessage","useFetchMsg","useGetLoggedInUser","useParams","jsxDEV","_jsxDEV","ChatPage","_s","chatId","user","allMsg","setAllMsg","addMessage","message","setMessage","handleOnSubmit","event","preventDefault","co","prevAllMsg","content","_id","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","index","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/shubham/chat/frontend/src/component/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './ChatPage.css';\nimport Header2 from '../Header/Header2';\nimport { useAddMessage, useFetchMsg } from '../Hooks/messageHooks';\nimport { useGetLoggedInUser } from '../Hooks/chatHooks';\nimport { useParams } from 'react-router-dom';\n\nconst ChatPage = () => {\n  const { chatId } = useParams();\n  const { user } = useGetLoggedInUser();\n  const { allMsg, setAllMsg } = useFetchMsg();\n  const { addMessage } = useAddMessage();\n  const [message, setMessage] = useState('');\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    if (user) {\n      await addMessage(message);\n      co\n      setAllMsg((prevAllMsg) => [...prevAllMsg, { content: message, user: user._id }]);\n      setMessage('');\n    } else {\n      console.log('User not logged in'); \n    }\n  };\n\n  return (\n    <div className=\"chat-page\">\n      <Header2 />\n      <div className=\"chat\">\n        {allMsg && allMsg.length > 0 ? (\n          allMsg.map((msg, index) => (\n            <div key={index} className=\"chat-messages\">\n              <div className=\"message\">{msg.content}</div>\n            </div>\n          ))\n        ) : (\n          <h1>No messages available</h1>\n        )}\n        <form onSubmit={handleOnSubmit}>\n          <input \n            type=\"text\" \n            placeholder=\"Type a message...\" \n            value={message} \n            onChange={(e) => setMessage(e.target.value)} \n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}