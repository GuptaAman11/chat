{"ast":null,"code":"var _jsxFileName = \"/Users/shubham/chat/frontend/src/component/context/ModalContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext();\nexport const ModalProvider = ({\n  children\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      isModalOpen,\n      openModal,\n      closeModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for consuming the context\n_s(ModalProvider, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = ModalProvider;\nexport const useModal = () => {\n  _s2();\n  return useContext(ModalContext);\n};\n_s2(useModal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ModalContext","ModalProvider","children","_s","isModalOpen","setIsModalOpen","openModal","closeModal","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useModal","_s2","$RefreshReg$"],"sources":["/Users/shubham/chat/frontend/src/component/context/ModalContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst ModalContext = createContext();\n\nexport const ModalProvider = ({ children }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  return (\n    <ModalContext.Provider value={{ isModalOpen, openModal, closeModal }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\n// Custom hook for consuming the context\nexport const useModal = () => useContext(ModalContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMS,SAAS,GAAGA,CAAA,KAAMD,cAAc,CAAC,IAAI,CAAC;EAC5C,MAAME,UAAU,GAAGA,CAAA,KAAMF,cAAc,CAAC,KAAK,CAAC;EAE9C,oBACEN,OAAA,CAACC,YAAY,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,WAAW;MAAEE,SAAS;MAAEC;IAAW,CAAE;IAAAL,QAAA,EAClEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAV,EAAA,CAbaF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAc1B,OAAO,MAAMc,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpB,UAAU,CAACI,YAAY,CAAC;AAAA;AAACgB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}